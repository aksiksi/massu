---
- name: Install Nginx
  apt:
    name: nginx
    state: present
  tags:
    - test
- name: Install Python 3
  apt:
    name: python3
    state: present
  tags:
    - test
- name: Install pip
  apt:
    name: python3-pip
    state: present
  tags:
    - test
- name: Install venv
  apt:
    name: python3-venv
    state: present
  tags:
    - test
- name: Create group
  group:
    name: "{{ vaulty_web_group }}"
    state: present
  tags:
    - test
- name: Create user
  user:
    name: "{{ vaulty_web_user }}"
    groups: "sudo,{{ vaulty_web_group }}"
    create_home: true
    shell: /bin/bash
    state: present
  tags:
    - test
- name: Pull vaulty repo
  git:
    repo: "{{ vaulty_repo }}"
    dest: "{{ vaulty_web_repo_path }}"
    force: yes
  tags:
    - test
    - update
- name: Change repo ownership
  file:
    path: "{{ vaulty_web_repo_path }}"
    state: directory
    mode: '0755'
    owner: "{{ vaulty_web_user }}"
    group: "{{ vaulty_web_group }}"
    recurse: yes
  tags:
    - test
- name: Create virtualenv
  become: yes
  become_user: "{{ vaulty_web_user }}"
  command:
    cmd: python3 -m venv "{{ vaulty_web_venv_path }}"
    creates: "{{ vaulty_web_venv_path }}"
  tags:
    - test
- name: Install Python packages
  pip:
    requirements: "{{ vaulty_web_code_path }}/requirements.txt"
    virtualenv: "{{ vaulty_web_venv_path }}"
  tags:
    - test
    - update
- name: Install certbot
  apt:
    name: certbot
    state: present
- name: Install certbot Nginx plugin
  apt:
    name: python-certbot-nginx
    state: present
- name: Configure and enable certbot
  shell: |
    certbot --nginx -d "{{ vaulty_domain }}" -d "web.{{ vaulty_domain }}" --noninteractive --agree-tos -m "{{ vaulty_postmaster }}"

  args:
    creates: "/etc/letsencrypt/live/{{ vaulty_domain }}/fullchain.pem"
- name: Create crontab to renew certs
  cron:
    name: "Renew LetsEncrypt certs"
    minute: "0"
    hour: "0"
    job: "/usr/bin/certbot renew > /dev/null"
