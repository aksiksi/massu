---
- name: Install Postfix
  apt:
    name: postfix
    state: present
- name: Ensure mail group exists
  group:
    name: "{{ mail_group }}"
    gid: "{{ mail_gid }}"
    state: present
- name: Create mail user and assign to group
  user:
    name: "{{ mail_user }}"
    uid: "{{ mail_uid }}"
    groups: "sudo,{{ mail_group }}"
    home: "{{ mail_dir }}"
    create_home: true
    state: present
- name: Create maildir for user
  file:
    path: "/var/mail/{{ mail_user }}"
    state: directory
    mode: '0755'
    owner: "{{ mail_user }}"
    group: "{{ mail_group }}"
- name: Install Postfix pgsql
  apt:
    name: postfix-pgsql
    state: present
- name: Install Postfix SPF policy server
  apt:
    name: postfix-policyd-spf-python
    state: present
- name: Build "vaulty-filter" and "vaulty-server" (release)
  local_action:
    module: shell
    cmd: cargo build --release
    chdir: ../vaulty-mail
- name: Copy "vaulty_server" to "/usr/bin"
  copy:
    src: ../vaulty-mail/target/release/vaulty_server
    dest: /usr/bin
    mode: u=rwx,g=rwx,o=rwx
- name: Copy "vaulty_filter" to "/usr/bin"
  copy:
    src: ../vaulty-mail/target/release/vaulty_filter
    dest: /usr/bin
    mode: u=rwx,g=rwx,o=rwx
- name: Install certbot
  apt:
    name: certbot
    state: present
# NOTE: Port 80 must not be taken (i.e., vaulty-web must be on another machine)
- name: Configure and enable certbot
  command: sudo certbot certonly --standalone -d "{{ inventory_hostname }}" --non-interactive --agree-tos -m "{{ vaulty_postmaster }}"
  args:
    creates: "/etc/letsencrypt/live/{{ inventory_hostname }}/fullchain.pem"
# NOTE: vmail user must have access to cert directories...
# Otherwise, add vmail to sudo
- name: Create crontab to renew certs
  cron:
    name: "Renew LetsEncrypt certs"
    minute: "0"
    hour: "0"
    job: "/usr/bin/certbot renew > /dev/null"
- name: Add certbot hook to reload Postfix on cert renewal
  lineinfile:
    path: "/etc/letsencrypt/renewal/{{ inventory_hostname }}.conf"
    line: "renew_hook = sudo systemctl reload postfix"
    state: present
- name: Copy Postfix configs to "/etc/postfix"
  copy:
    src: "{{ item }}"
    dest: /etc/postfix
  loop:
    - ../files/postfix/master.cf
    - ../files/postfix/virtual
- name: Template Postfix "main.cf"
  template:
    src: ../templates/postfix/main.cf.j2
    dest: /etc/postfix/main.cf
    owner: vmail
    group: vmail
    mode: u=rw,g=r,o=r
- name: Template Postfix PGSQL virtual mapping file
  template:
    src: ../templates/postfix/pgsql-vmail.cf.j2
    dest: /etc/postfix/pgsql-vmail.cf
    owner: vmail
    group: vmail
    mode: u=rw,g=r,o=r
- name: Template Postfix PGSQL virtual aliases file
  template:
    src: ../templates/postfix/pgsql-valiases.cf.j2
    dest: /etc/postfix/pgsql-valiases.cf
    owner: vmail
    group: vmail
    mode: u=rw,g=r,o=r
- name: Reload Postfix configs
  shell: postfix reload
- name: Copy "vaulty_server" systemd unit
  copy:
    src: ../files/vaulty.service
    dest: /etc/systemd/system/
- name: Copy "vaulty_server" env file
  copy:
    src: ../files/vaulty.env
    dest: /etc/vaulty/
- name: Template "vaulty_server" config file
  template:
    src: ../templates/vaulty.toml.j2
    dest: /etc/vaulty/vaulty.toml
    owner: vmail
    group: vmail
    mode: u=rw,g=r,o=r
- name: Enable and start vaulty service
  systemd:
    state: restarted
    daemon_reload: yes
    enabled: yes
    name: vaulty
